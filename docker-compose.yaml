services:
  db:
    build:
      dockerfile: Dockerfile_postgres
      context: '.'
    restart: always
    environment:
      POSTGRES_PASSWORD: '123456'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./restore_db.sh:/docker-entrypoint-initdb.d/restore_db.sh

  redis:
    image: redis
    volumes:
      - redis_data:/data

  web:
    build: .
    command: sh -c "python manage.py collectstatic --noinput && gunicorn --bind 0.0.0.0:8000 --access-logfile - config.wsgi:application"
    volumes:
      - .:/app
      - static:/app/static
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    environment:
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_BACKEND: "redis://redis:6379/0"
      DATABASE_URL: "postgres://hhuser:123456@db:5432/habitz"
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web
volumes:
  postgres_data:
  static: